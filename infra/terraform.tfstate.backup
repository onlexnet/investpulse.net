{
  "version": 4,
  "terraform_version": "1.11.2",
  "serial": 79,
  "lineage": "537a54ca-83a7-e5e0-f60f-ef485f4a34fa",
  "outputs": {},
  "resources": [
    {
      "mode": "managed",
      "type": "helm_release",
      "name": "kafka",
      "provider": "provider[\"registry.terraform.io/hashicorp/helm\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "atomic": false,
            "chart": "kafka",
            "cleanup_on_fail": false,
            "create_namespace": false,
            "dependency_update": false,
            "description": null,
            "devel": null,
            "disable_crd_hooks": false,
            "disable_openapi_validation": false,
            "disable_webhooks": false,
            "force_update": false,
            "id": "kafka",
            "keyring": null,
            "lint": false,
            "manifest": null,
            "max_history": 0,
            "metadata": [
              {
                "app_version": "3.9.0",
                "chart": "kafka",
                "first_deployed": 1742047835,
                "last_deployed": 1742047835,
                "name": "kafka",
                "namespace": "default",
                "notes": "CHART NAME: kafka\nCHART VERSION: 31.3.0\nAPP VERSION: 3.9.0\n\nDid you know there are enterprise versions of the Bitnami catalog? For enhanced secure software supply chain features, unlimited pulls from Docker, LTS support, or application customization, see Bitnami Premium or Tanzu Application Catalog. See https://www.arrow.com/globalecs/na/vendors/bitnami for more information.\n---------------------------------------------------------------------------------------------\n WARNING\n\n    By specifying \"serviceType=LoadBalancer\" and not configuring the authentication\n    you have most likely exposed the Kafka service externally without any\n    authentication mechanism.\n\n    For security reasons, we strongly suggest that you switch to \"ClusterIP\" or\n    \"NodePort\". As alternative, you can also configure the Kafka authentication.\n\n---------------------------------------------------------------------------------------------\n\n** Please be patient while the chart is being deployed **\n\nKafka can be accessed by consumers via port 9092 on the following DNS name from within your cluster:\n\n    kafka.default.svc.cluster.local\n\nEach Kafka broker can be accessed by producers via port 9092 on the following DNS name(s) from within your cluster:\n\n    kafka-controller-0.kafka-controller-headless.default.svc.cluster.local:9092\n\nTo create a pod that you can use as a Kafka client run the following commands:\n\n    kubectl run kafka-client --restart='Never' --image docker.io/bitnami/kafka:3.9.0-debian-12-r4 --namespace default --command -- sleep infinity\n    kubectl exec --tty -i kafka-client --namespace default -- bash\n\n    PRODUCER:\n        kafka-console-producer.sh \\\n            --bootstrap-server kafka.default.svc.cluster.local:9092 \\\n            --topic test\n\n    CONSUMER:\n        kafka-console-consumer.sh \\\n            --bootstrap-server kafka.default.svc.cluster.local:9092 \\\n            --topic test \\\n            --from-beginning\nTo connect to your Kafka controller+broker nodes from outside the cluster, follow these instructions:\n    Kafka brokers domain: You can get the external node IP from the Kafka configuration file with the following commands (Check the EXTERNAL listener)\n\n        1. Obtain the pod name:\n\n        kubectl get pods --namespace default -l \"app.kubernetes.io/name=kafka,app.kubernetes.io/instance=kafka,app.kubernetes.io/component=kafka\"\n\n        2. Obtain pod configuration:\n\n        kubectl exec -it KAFKA_POD -- cat /opt/bitnami/kafka/config/server.properties | grep advertised.listeners\n    Kafka brokers port: You will have a different node port for each Kafka broker. You can get the list of configured node ports using the command below:\n\n        echo \"$(kubectl get svc --namespace default -l \"app.kubernetes.io/name=kafka,app.kubernetes.io/instance=kafka,app.kubernetes.io/component=kafka,pod\" -o jsonpath='{.items[*].spec.ports[0].nodePort}' | tr ' ' '\\n')\"\n\nWARNING: There are \"resources\" sections in the chart not set. Using \"resourcesPreset\" is not recommended for production. For production installations, please set the following values according to your workload needs:\n  - controller.resources\n+info https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/\n",
                "revision": 1,
                "values": "{\"advertisedListeners\":{\"client\":true,\"external\":true},\"allowPlaintextListener\":true,\"controller\":{\"replicaCount\":1},\"externalAccess\":{\"controller\":{\"service\":{\"externalIPs\":[\"192.168.49.2\"],\"nodePorts\":[30094],\"type\":\"NodePort\"}},\"enabled\":true},\"listeners\":{\"client\":{\"protocol\":\"PLAINTEXT\"},\"external\":{\"protocol\":\"PLAINTEXT\"}}}",
                "version": "31.3.0"
              }
            ],
            "name": "kafka",
            "namespace": "default",
            "pass_credentials": false,
            "postrender": [],
            "recreate_pods": false,
            "render_subchart_notes": true,
            "replace": false,
            "repository": "oci://registry-1.docker.io/bitnamicharts",
            "repository_ca_file": null,
            "repository_cert_file": null,
            "repository_key_file": null,
            "repository_password": null,
            "repository_username": null,
            "reset_values": false,
            "reuse_values": false,
            "set": [
              {
                "name": "advertisedListeners.client",
                "type": "",
                "value": "true"
              },
              {
                "name": "advertisedListeners.external",
                "type": "",
                "value": "true"
              },
              {
                "name": "allowPlaintextListener",
                "type": "",
                "value": "true"
              },
              {
                "name": "controller.replicaCount",
                "type": "",
                "value": "1"
              },
              {
                "name": "externalAccess.controller.service.type",
                "type": "",
                "value": "NodePort"
              },
              {
                "name": "externalAccess.enabled",
                "type": "",
                "value": "true"
              },
              {
                "name": "listeners.client.protocol",
                "type": "",
                "value": "PLAINTEXT"
              },
              {
                "name": "listeners.external.protocol",
                "type": "",
                "value": "PLAINTEXT"
              }
            ],
            "set_list": [
              {
                "name": "externalAccess.controller.service.externalIPs",
                "value": [
                  "192.168.49.2"
                ]
              },
              {
                "name": "externalAccess.controller.service.nodePorts",
                "value": [
                  "30094"
                ]
              }
            ],
            "set_sensitive": [],
            "skip_crds": false,
            "status": "deployed",
            "timeout": 300,
            "upgrade_install": null,
            "values": null,
            "verify": false,
            "version": "31.3.0",
            "wait": true,
            "wait_for_jobs": false
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "repository_password"
              }
            ]
          ],
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjEifQ=="
        }
      ]
    }
  ],
  "check_results": null
}
